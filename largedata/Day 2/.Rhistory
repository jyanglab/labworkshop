x1<-runif(20, 5, 15)	# generate 20 random numbers between 5 and 15 with an uniform distribution
x2<-runif(20, 5, 20)	# generate 20 random numbers between 10 and 20 with an uniform distribution
y1<-rnorm(20, 100, 10) 	# generate 20 random numbers with a normal distribution of mean 100 and standard deviation 10.
y2<-rnorm(20, 120, 10) 	# generate 20 random numbers with a normal distribution of mean 120 and standard deviation 10.
s<-c(rep("A", 10), rep("B", 10))	# generate a categorical variable
sample_dat<-as.data.frame(cbind(x1, x2, y1, y2,s))					# combine all variables into a data frame
str(sample_dat)
sample_dat$x1<-as.numeric(as.character(sample_dat$x1))				# change variable x1 as numeric
sample_dat$x2<-as.numeric(as.character(sample_dat$x2))				# change variable x2 as numeric
sample_dat$y1<-as.numeric(as.character(sample_dat$y1))				# change variable y1 as numeric
sample_dat$y2<-as.numeric(as.character(sample_dat$y2))				# change variable y2 as numeric
colnames(sample_dat)<-c("X1", "X2", "Y1", "Y2", "S")  					# change variable names (column names)
str(sample_dat)
par(mfrow=c(1,2))
dat<-read.csv("Day2_sample_data.csv")
attach(dat)
plot(Height,Weight)
setwd("~/R/Day 2")
dat<-read.csv("Day2_sample_data.csv")
attach(dat)
plot(Height,Weight)
plot(Weight,Height)
plot(Weight,Height,pch=10)
par(mfrow=c(1,1))
plot(Height~Weight, data=dat.M, col="blue", pch=18,
xlim=c(min(dat$Weight), max(dat$Weight)),
ylim=c(min(dat$Height), max(dat$Height)))
points(Height~Weight, data=dat.F, col="orange", pch=18)
dat.M<-dat[dat$Gender=="M",]
dat.F<-dat[dat$Gender=="F",]
par(mfrow=c(1,1))
plot(Height~Weight, data=dat.M, col="blue", pch=18,
xlim=c(min(dat$Weight), max(dat$Weight)),
ylim=c(min(dat$Height), max(dat$Height)))
points(Height~Weight, data=dat.F, col="orange", pch=18)
abline(lm(Height~Weight, data=dat), lty=4)  ## regression line for all female and male
abline(lm(Height~Weight, data=dat.M), lty=1,
lwd=2, col="blue")  ## regression line for male
abline(lm(Height~Weight, data=dat.F), lty=1,
lwd=2, col="orange")  ## regression line for female
legend("topleft", pch=18, lty=1,
col="blue"
legend="Male")
legend("topleft", pch=18, lty=1,
col="blue",
legend="Male")
legend("topleft", pch=c(18, 18), lty=c(1,1),
col=c("blue", "orange"),
legend=c("Male", "Female"))
boxplot(Height~Gender, data=dat,
col=c("blue", "orange"), ylab="Height")
mean<-tapply(dat$Weight, dat$Gender, mean)
sd<-tapply(dat$Weight, dat$Gender, sd)
nbr<-tapply(dat$Weight, dat$Gender, length)
se<-sd/sqrt(nbr)
barplot(mean, col=c("blue", "orange"),
ylab="Weight", ylim=c(0,100))
barplot(mean, col=c("blue", "orange"),
border=c("blue", "orange"),
ylab="Weight", ylim=c(0,100))
barplot(mean, col=c("blue", "orange"),
ylab="Weight", ylim=c(0,100))
barplot(mean, col=c("blue", "orange"),
border=c("blue", "orange"),
ylab="Weight", ylim=c(0,100))
xx<-barplot(mean, plot=F)
?plot
xx<-barplot(mean)
arrows(xx, mean, xx, mean+sd, angle=90,
col=c("blue", "orange"), lwd=2)
xx<-barplot(mean, plot=F)
arrows(xx, mean, xx, mean+sd, angle=90,
col=c("blue", "orange"), lwd=2)
xx<-barplot(mean, plot=(F,M))
arrows(xx, mean, xx, mean+sd, angle=90,
col=c("blue", "orange"), lwd=2)
barplot(mean, col=c("blue", "orange"),
border=c("blue", "orange"),
ylab="Weight", ylim=c(0,100))
xx<-barplot(mean, plot=F)
arrows(xx, mean, xx, mean+sd, angle=90,
col=c("blue", "orange"), lwd=2)
library("moments", lib.loc="~/R/win-library/3.4")
read.csv("https://raw.githubusercontent.com/vincentarelbundock/Rdatasets/master/csv/DAAG/cuckoos.csv")
