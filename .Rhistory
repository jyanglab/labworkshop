# Creating a Graph
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
knit_with_parameters('~/Documents/Github/projects/labworkshop/profiling/1.R-basic/1.A.1_R-101.Rmd')
# , include=TRUE, warning=FALSE, echo=TRUE, error=FALSE
knitr::opts_knit$set(root.dir=normalizePath('../../'))
knitr::opts_chunk$set(warning=FALSE, message=FALSE, error=FALSE, echo=TRUE)
#read csv
Sra<- read.table("data/SraRunTable_walley_etal_2016.txt", header=TRUE,
sep="\t")
head(Sra)#take a look at the first and last 6 rows
tail(Sra)
dim(Sra)
# , include=TRUE, warning=FALSE, echo=TRUE, error=FALSE
knitr::opts_knit$set(root.dir=normalizePath('../../'))
knitr::opts_chunk$set(warning=FALSE, message=FALSE, error=FALSE, echo=TRUE)
#read csv
Sra<- read.table("data/SraRunTable_walley_etal_2016.txt", header=TRUE,
sep="\t")
head(Sra)#take a look at the first and last 6 rows
tail(Sra)
dim(Sra)
rm(list=ls())
#read csv
Sra<- read.table("data/SraRunTable_walley_etal_2016.txt", header=TRUE,
sep="\t")
head(Sra)#take a look at the first and last 6 rows
tail(Sra)
dim(Sra)
getwd()
#read csv
Sra<- read.table("data/SraRunTable_walley_etal_2016.txt", header=TRUE,
sep="\t")
head(Sra)#take a look at the first and last 6 rows
tail(Sra)
dim(Sra)
getwd()
print("the instructor's name is Sydney")
print("my name is _____")
5+1/3
# , include=TRUE, warning=FALSE, echo=TRUE, error=FALSE
knitr::opts_knit$set(root.dir=normalizePath('../../'))
knitr::opts_chunk$set(warning=FALSE, message=FALSE, error=FALSE, echo=TRUE)
# Creating a Graph
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
# first row contains variable names, comma is separator
# assign the variable id to row names
# note the / instead of \ on mswindows systems
mydata <- read.table("C:/Users/Eric/Desktop/labworkshop/data/yu_etal_2015_SRR.csv", header=TRUE, sep=",")
#setwd("~/Documents/Github/pvpDiallel/")
knitr::opts_knit$set(root.dir=normalizePath('../../'))
raw <- read.csv("data/organized_phenotyping_data_Havelock2018.csv")
#setwd("~/Documents/Github/pvpDiallel/")
knitr::opts_knit$set(root.dir=normalizePath('../../'))
raw <- read.csv("data/organized_phenotyping_data_Havelock2018.csv")
head(raw)
tail(raw)
dim(raw)
names(raw)
cw <- raw[,c("Barcode", "Number.of.ears", "Cob.width.1", "Cob.width.2", "Cob.width.3", "Cob.width.4",
"Cob.width.5", "Cob.width.6", "Cob.Width.7", "Cob.width.8")]
head(cw)
dim(cw)
dim(cw)
# count the length of non-unique barcode
length(unique(cw$Barcode))
# find out which one is not unique
idx <- which(duplicated(cw$Barcode))
idx
cw$Barcode[idx]
# show the duplicated rows
cw[cw$Barcode %in% cw$Barcode[idx], ]
# reshape the data from wide format to long format for cob idth and cob length trait
library("tidyr")
class(cw1[,3])
# reshape the data from wide format to long format for cob idth and cob length trait
library("tidyr")
class(cw1[,3])
dim(cw)
# count the length of non-unique barcode
length(unique(cw$Barcode))
# find out which one is not unique
idx <- which(duplicated(cw$Barcode))
# show the duplicated rows
cw[cw$Barcode %in% cw$Barcode[idx], ]
# for now, let's remove both rows
cw1 <- cw[!(cw$Barcode %in% cw$Barcode[idx]), ]
# reshape the data from wide format to long format for cob idth and cob length trait
library("tidyr")
class(cw1[,3])
## important trick!
cw1[,3] <- as.numeric(as.character(cw1[,3]))
cw2 <- gather(cw1, key="Trait", value="value", c("Cob.width.1", "Cob.width.2", "Cob.width.3", "Cob.width.4",
"Cob.width.5", "Cob.width.6", "Cob.Width.7", "Cob.width.8"))
# for now, let's remove both rows
cw1 <- cw[!(cw$Barcode %in% cw$Barcode[idx]), ]
# reshape the data from wide format to long format for cob idth and cob length trait
library("tidyr")
class(cw1[,3])
## important trick!
cw1[,3] <- as.numeric(as.character(cw1[,3]))
cw2 <- gather(cw1, key="Trait", value="value", c("Cob.width.1", "Cob.width.2", "Cob.width.3", "Cob.width.4",
"Cob.width.5", "Cob.width.6", "Cob.Width.7", "Cob.width.8"))
head(cw2)
# remove the NA rows
cw2 <- subset(cw2, !is.na(value))
## important trick!
cw1[,3] <- as.numeric(as.character(cw1[,3]))
cw2 <- gather(cw1, key="Trait", value="value", c("Cob.width.1", "Cob.width.2", "Cob.width.3", "Cob.width.4",
"Cob.width.5", "Cob.width.6", "Cob.Width.7", "Cob.width.8"))
head(cw2)
dim(cw2)
dim(cw1)
1209*8
# remove the NA rows
cw2 <- subset(cw2, !is.na(value))
dim(cw2)
head(cw2)
tail(cw2)
# order the data.frame by "Barcode" column
cw2 <- cw2[order(cw2$Barcode),]
head(cw2)
# calculate for each bag "barcode", how many non-NA records
tb <- as.data.frame(table(cw2$Barcode)) #1210
head(tb)
range(tb$Freq)
tb <- merge(tb, cw1[, 1:2], by.x="Var1", by.y="Barcode", all=TRUE) #1210
#subset(tb, is.na(Number.of.ears))
subset(tb, is.na(Freq))
c1 <- subset(tb, Freq != Number.of.ears)
head(c1)
dim(c1)
60/1000
# 60 of the records are inconsistent with the obs.
subset(cw1, Barcode %in% "2018-1039OP_Tzi18OP")
median(cw2$value) #22.2
mean(cw2$value) #20.69717
range(cw2$value) #1.3 522.0
hist(cw2$value)
hist(cw2$value, breaks=100)
# https://www.color-hex.com/color-names.html
hist(cw2$value, breaks=100, col="#eec591", xlab="Cob Width", ylab="freq", main="histogram")
?hist
cw2 <- cw2[order(cw2$value, decreasing=TRUE),]
head(cw2)
cw2 <- cw2[-1:-2,]
hist(cw2$value, breaks=100, col="#eec591", xlab="Cob Width", ylab="freq", main="histogram")
cw3 <- subset(cw2, value > 5)
hist(cw3$value, breaks=50, col="#eec591", xlab="Cob Width", ylab="freq", main="histogram")
cw3 <- subset(cw2, value > 5)
hist(cw3$value, breaks=50, col="#9932cc", xlab="Cob Width", ylab="freq", main="histogram")
?shapiro.test
shapiro.test(cw3$value)
### what a normal distribution looks like
n <- rnorm(1000, mean = 5, sd = 3)
hist(n, breaks=50, col="#eec591", xlab="Cob Width", ylab="freq", main="histogram")
shapiro.test(n)
hist(n, breaks=50, col="#eec591", xlab="Cob Width", ylab="freq", main="histogram")
head(cw3)
cw3$type <- "self"
cw3$type <- "self"
idx <- grep("OP", cw3$Barcode)
cw3$type <- as.character(cw3$type)
cw3$type[idx] <- "OP"
table(cw3$type)
op <- subset(cw3, type == "OP")
## pattern match
op$row <- as.character(op$Barcode)
head(op)
op$row <- gsub("_.*", "", op$row)
head(op)
tail(op)
op$row <- gsub(".*-|OP", "", op$row)
op$row <- as.numeric(op$row)
op$row <- gsub(".*-|OP|op", "", op$row)
op$row <- as.numeric(op$row)
op <- subset(cw3, type == "OP")
## pattern match
op$row <- as.character(op$Barcode)
op$row <- gsub("_.*", "", op$row)
#op$row <- gsub(".*-|OP", "", op$row)
#op$row <- as.numeric(op$row)
op$row <- gsub(".*-|OP|op", "", op$row)
op$row <- as.numeric(op$row)
head(op)
op$plot <- 0
op[op$row < 2000, ]$plot <- "plot1"
op[op$row > 2000 & op$row < 3000, ]$plot <- "plot2"
op[op$row > 3000 & op$row < 4000, ]$plot <- "plot3"
op[op$row > 4000, ]$plot <- "plot4"
table(op$plot)
library("ggplot2")
p<-ggplot(op, aes(x=value, fill=plot)) +
geom_histogram()
p
p<-ggplot(op, aes(x=value))+
geom_histogram(color="black", fill="white")+
facet_grid(plot ~ .)
p
